<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- 放行登录页面   -->
	<http pattern="/jsp/login.do" security="none"/>
	<http pattern="/jsp/login.jsp" security="none"/>
	<http pattern="/login.jsp" security="none"/>    
	<http pattern="/jcaptcha.jpg" security="none"/>
	<http pattern="/css/**" security="none"/>
	<http pattern="/images/**" security="none"/>
	<http pattern="/fonts/**" security="none"/>
	<http pattern="/js/**" security="none"/>
	<!-- use-expressions="true" 是开启表达式 access-denied-page是验证权限失败后会跳转到的页面   -->
	<http use-expressions="true" access-denied-page="/WEB-INF/jsp/common/error.jsp" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<!-- 要访问jsp文件夹下的所有页面 必须具备ROLE_USER -->
		<intercept-url pattern="/**/**"  access="hasRole('ROLE_USER')" />
		<!-- 登录跳转 清空session -->
		<logout logout-url="/j_spring_security_logout" logout-success-url="/login.jsp" invalidate-session="true" delete-cookies="JSESSIONID"/>
        <!--  error-if-maximum-exceeded 后登陆的账号会挤掉第一次登陆的账号   
         session-fixation-protection  防止伪造sessionid攻击,用户登录成功后会销毁用户当前的session。   -->  
    	<!-- <session-management invalid-session-url="/login.jsp" session-fixation-protection="none" >  
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>  
    	</session-management> -->
    	<session-management invalid-session-url="/login.jsp" session-authentication-strategy-ref="sas"/>  
    	<!-- 自定义登录验证器 -->
    	<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER"  /> 
    	<!-- 自定义权限验证器 --> 
    	<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
    	<custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER"/>            
	</http>  
	<!-- ConcurrentSessionFilter过滤器配置(主要设置账户session过期路径) -->  
	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">  
	    <beans:property name="expiredUrl" value="/login.jsp"></beans:property>  
	    <beans:property name="sessionRegistry" ref="sessionRegistry"></beans:property>  
	</beans:bean>  
	<!-- 登录验证器 -->
    <beans:bean id="loginFilter" class="dkd.okay.system.util.security.MyUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
		<beans:property name="sessionAuthenticationStrategy" ref="sas"></beans:property>  
	</beans:bean>
	
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry"></beans:constructor-arg>    
	    <beans:property name="maximumSessions" value="1"></beans:property>  
	    <beans:property name="exceptionIfMaximumExceeded" value="false"></beans:property>  
	</beans:bean>  
	
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"></beans:bean>  
	<!-- 登录成功转向url -->
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="dkd.okay.system.util.security.MySavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/jsp/loginSuccess.do"></beans:property>
	</beans:bean>
	<!-- 登录失败转向url -->
	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.jsp"></beans:property>
	</beans:bean>
	<!-- 实现了UserDetailsService的Bean   -->
    <!-- <authentication-manager alias="myAuthenticationManager" >  
        <authentication-provider user-service-ref="myUserDetailServiceImpl">
        	<password-encoder hash="md5"/>
        </authentication-provider>  
    </authentication-manager>  -->
    <authentication-manager alias="myAuthenticationManager">  
    	<authentication-provider ref="authenticationProvider" />  
	</authentication-manager> 
    <beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">  
    	<beans:property name="userDetailsService" ref="myUserDetailServiceImpl" />  
    	<beans:property name="hideUserNotFoundExceptions" value="false" />  
    	<beans:property name="passwordEncoder" ref="passwordEncoder" />
	</beans:bean>  
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	<beans:bean id="myUserDetailServiceImpl" class="dkd.okay.system.util.security.MyUserDetailServiceImpl"/>  
	<!-- 配置自定义过滤器   -->
	<beans:bean id="myFilter" class="dkd.okay.system.util.security.MySecurityFilter">  
        <!-- 用户拥有的权限   -->
        <beans:property name="authenticationManager" ref="myAuthenticationManager" />  
        <!-- 用户是否拥有所请求资源的权限   -->
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager" /> 
        <!-- 全部权限   -->
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />  
    </beans:bean>
    <beans:bean id="myAccessDecisionManager" class="dkd.okay.system.util.security.MyAccessDecisionManager" /> 
    <beans:bean id="mySecurityMetadataSource" class="dkd.okay.system.util.security.MySecurityMetadataSource">  
        <!-- <beans:constructor-arg name="authorityDaoImpl" ref="authorityDao"></beans:constructor-arg>  -->
        <beans:constructor-arg name="authorityServiceImpl" ref="authorityService"></beans:constructor-arg>
    </beans:bean>   
    <!-- 未登录的切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.jsp"></beans:property>
	</beans:bean>
	<!-- Jcaptcha相关的配置 -->  
    <beans:bean id="captchaService"  class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">  
        <beans:property name="captchaEngine">  
            <beans:bean class="dkd.okay.system.util.code.GMailEngine" />  
        </beans:property>  
        <!--默认生成的图片180秒过期 , 可另行设置  -->    
        <beans:property name="minGuarantedStorageDelayInSeconds" value="180" />   
    </beans:bean>  
   	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <beans:property name="basename" value="classpath:org/springframework/security/messages_zh_CN" />  
    </beans:bean>  
    <beans:bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver" />  
</beans:beans>