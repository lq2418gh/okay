<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Order">
	<resultMap type="Order" id="orderMap">
		<id column="id" property="id" />
		<result column="order_no" property="order_no" />
		<result column="urgent_type" property="urgent_type" />
		<result column="purchase_user_id" property="purchase_user_id" />
		<result column="order_state" property="order_state" />
		<result column="state" property="state" />
		<result column="supplier_id" property="supplier_id" />
		<result column="frame_id" property="frame_id" />
		<result column="contract_id" property="contract_id" />
		<result column="sign_date" property="sign_date" />
		<result column="buyer_tel" property="buyer_tel" />
		<result column="buyer_fax" property="buyer_fax" />
		<result column="buyer_zip_code" property="buyer_zip_code" />
		<result column="buyer_address" property="buyer_address" />		
		<result column="seller_tel" property="seller_tel" />
		<result column="seller_fax" property="seller_fax" />
		<result column="seller_contact" property="seller_contact" />
		<result column="seller_address" property="seller_address" />		
		<result column="delivery_contact" property="delivery_contact" />
		<result column="delivery_call" property="delivery_call" />
		<result column="delivery_address" property="delivery_address" />
		<result column="order_amount" property="order_amount" />
		<result column="transportation_clause" property="transportation_clause" />
		<result column="buyer_explain" property="buyer_explain" />
		
		<result column="bank_account_number" property="bank_account_number" />
		<result column="frame_no" property="frame_no" />
		<result column="contract_no" property="contract_no" />
		
	<result column="purchase_no" property="purchase_no" />
	<result column="materialsPurchaseId" property="materialsPurchaseId" />
		
		<association property="userInfo" javaType="UserInfo">
			<id column="userinfo_id" property="userinfoid" />
			<result column="realName" property="realName" />
		</association>
		<association property="supplier" javaType="Supplier">
			<id column="id" property="id" />
			<result column="supplier_name" property="supplier_name" />
			<result column="TEL" property="tel"/>			
			<result column="LINKMAN" property="linkman"/>
			<result column="FAX" property="fax"/>
			<result column="ADDRESS" property="address"/>
		</association>
		<association property="frameHead" javaType="FrameHead">
			<id column="id" property="id" />
			<result column="frame_no" property="frameNo" />
		</association>
		
		<association property="contractHead" javaType="PurchaseContractHead">
			<id column="id" property="id" />
			<result column="contract_no" property="contractNo" />
		</association>
		
		
	</resultMap> 
	
	
	<sql id="all"> 
	o.id,o.ORDER_NO,o.URGENT_TYPE,o.PURCHASE_USER_ID,o.STATE,o.SUPPLIER_ID,o.FRAME_ID,o.bank_account_number
	,o.CONTRACT_ID,o.SIGN_DATE,o.BUYER_TEL,o.BUYER_FAX,o.BUYER_ZIP_CODE,o.order_state
	,o.BUYER_ADDRESS,o.DELIVERY_CONTACT,o.delivery_call
	,o.DELIVERY_ADDRESS,o.ORDER_AMOUNT,o.TRANSPORTATION_CLAUSE
	,o.BUYER_EXPLAIN,o.seller_address,o.seller_contact,o.seller_fax,o.seller_tel ,o.purchase_no,o.materialsPurchaseId 
	</sql>
	
	<!--分页模糊 purchase-->
	<select id="selectByCondition" resultMap="orderMap" parameterType="map">
		select * from (
		select o.*,u.realName ,s.supplier_name,f.frame_no,c.contract_no ,
		ROW_NUMBER() OVER (order by ORDER_NO ) r 
		from  b_order_head o
		inner join SYS_USERINFO u on  u.user_id = o.purchase_user_id 
		inner join base_supplier s on  s.id = o.supplier_id
		left  join b_frame_head f on f.id = o.FRAME_ID		
		left  join b_purchase_contract_head c on c.id = o.CONTRACT_ID
		where 1=1 
		<if test="order.order_no != null and order.order_no != ''"> and o.ORDER_NO like '%' || #{order.order_no} || '%'</if>
		<if test="order.state != null and order.state != ''"> and o.STATE = #{order.state}</if>
		<if test="order.order_state != null and order.order_state != ''"> and o.order_state = #{order.order_state}</if>
		<if test="order.supplier_name != null and order.supplier_name != ''"> and s.supplier_name like '%' || #{order.supplier_name} || '%'</if>
		<if test="order.urgent_type != null and order.urgent_type != ''"> and o.URGENT_TYPE = #{order.urgent_type}</if>
		order by ORDER_NO desc 
		)s
		<if test="page!= null">
			where s.r
			between (#{page.totalCount}-#{page.pageNow}*#{page.pageSize}+1)
			and (#{page.totalCount}-(#{page.pageNow}-1)*#{page.pageSize})
		</if>
	</select>
	<!--查询记录数-->
	<select id="countParam" resultType="int" parameterType="map">
		select count(*) 
		from  b_order_head o
		inner join SYS_USERINFO u on  u.user_id = o.purchase_user_id 
		inner join base_supplier s on  s.id = o.supplier_id
		left  join b_frame_head f on f.id = o.FRAME_ID		
		left  join b_purchase_contract_head c on c.id = o.CONTRACT_ID
		where 1=1 
		<if test="order.order_no != null and order.order_no != ''"> and o.ORDER_NO like '%' || #{order.order_no} || '%'</if>
		<if test="order.state != null and order.state != ''"> and o.STATE = #{order.state}</if>
		<if test="order.order_state != null and order.order_state != ''"> and o.order_state = #{order.order_state}</if>
		<if test="order.supplier_name != null and order.supplier_name != ''"> and s.supplier_name like '%' || #{order.supplier_name} || '%'</if>
		<if test="order.urgent_type != null and order.urgent_type != ''"> and o.URGENT_TYPE = #{order.urgent_type}</if>
	</select> 
	
	<!-- 通过截取单据号的年月来查询单据 -->
	<select id="countNo" parameterType="String" resultType="int">
	select count(*) from b_order_head where order_no like #{yearMon} || '%'
	</select>
	<!-- 插入数据 -->
	<insert id="insert" parameterType="Order">
	INSERT INTO b_order_head
	(id,order_no,urgent_type,purchase_user_id,state,supplier_id,frame_id,purchase_no,materialsPurchaseId ,bank_account_number,order_state,
	contract_id,sign_date,buyer_tel,buyer_fax,buyer_zip_code,
	buyer_address,delivery_contact,delivery_call,
	delivery_address,order_amount,transportation_clause,
	buyer_explain,seller_tel,seller_fax,seller_contact,seller_address) 
	VALUES
	(#{id},#{order_no},#{urgent_type},#{purchase_user_id},#{state},#{supplier_id},#{frame_id},#{purchase_no},#{materialsPurchaseId},#{bank_account_number},#{order_state},
	#{contract_id},#{sign_date},#{buyer_tel},#{buyer_fax},#{buyer_zip_code},
	#{buyer_address},#{delivery_contact},#{delivery_call},
	#{delivery_address},#{order_amount},#{transportation_clause},
	#{buyer_explain},#{seller_tel},#{seller_fax},#{seller_contact},#{seller_address})
	</insert>
	<!-- 删除数据 -->
	<delete id="delPur" parameterType="java.lang.String">
	 delete from b_order_head where ID = #{id}
	</delete>
	
	<!-- 根据id获取 -->  
	<select id="selectByPk" parameterType="string" resultMap="orderMap">
	SELECT <include refid="all"/>
	,f.frame_no ,s.supplier_name,u.realName,s.TEL,s.LINKMAN,s.FAX,s.ADDRESS ,c.contract_no 
	FROM b_order_head O
	inner join SYS_USERINFO u on  u.user_id = o.purchase_user_id 
	inner join base_supplier s on  s.id = o.supplier_id
	left join b_frame_head f on  f.id = o.frame_id
	left join b_purchase_contract_head c on  c.id = o.CONTRACT_ID
	WHERE  O.id= #{id}
	</select>
	<!-- 更新全部 -->
	<update id="update" parameterType="Order">
		update b_order_head set 
		urgent_type = #{urgent_type},purchase_user_id = #{purchase_user_id},
		supplier_id = #{supplier_id},frame_id = #{frame_id},bank_account_number = #{bank_account_number},
		purchase_no = #{purchase_no},materialsPurchaseId = #{materialsPurchaseId},
		contract_id = #{contract_id},sign_date = #{sign_date},
		buyer_tel = #{buyer_tel},buyer_fax = #{buyer_fax},
		buyer_zip_code = #{buyer_zip_code},buyer_address = #{buyer_address},
		delivery_contact = #{delivery_contact},delivery_call = #{delivery_call},
		delivery_address = #{delivery_address},order_amount = #{order_amount},
		transportation_clause = #{transportation_clause},buyer_explain = #{buyer_explain},
		seller_tel = #{seller_tel},seller_fax = #{seller_fax} , seller_contact = #{seller_contact},seller_address = #{seller_address}
		where ID=#{id}
	</update>
	
	<!-- 更新状态 -->
	<update id="updateState" parameterType="Order">
		update b_order_head set 
		state = #{state}
		where ID=#{id}
	</update>
	<!-- 更新状态 -->
	<update id="updateOrderState" parameterType="Order">
		update b_order_head set 
		order_state = #{order_state}
		where ID=#{id}
	</update>
	
</mapper>