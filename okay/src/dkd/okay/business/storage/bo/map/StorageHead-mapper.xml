<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StorageHead">

	<resultMap type="StorageHead" id="storageHeadMap">
		<id column="id" property="id" />
		<result column="storage_no" property="storage_no" />
		<result column="warehouse" property="warehouse" />
		<result column="entry_date" property="entry_date" />
		<result column="user_id" property="user_id" />
		<result column="order_frame" property="order_frame" />
		<result column="state" property="state" />
		<result column="is_choice" property="is_choice" />
		<result column="main_totalAmount" property="main_totalAmount" />
		<result column="supplier_name" property="supplier_name" />
		<result column="user_name" property="user_name" />
		<result column="order_no" property="order_no" />
		<result column="contract_no" property="contract_no" />
		<result column="frame_no" property="frame_no" />
		<result column="warehouse_name" property="warehouse_name" />
		<result column="frame_id" property="frame_id" />
		<result column="contract_id" property="contract_id" />
		<collection column="ID" property="storageDetailList" ofType="StorageDetail">
        	<id column="sid" property="id"/>
        	<result column="no" property="no"/>
        	<result column="storge_head" property="storge_head"/>
			<result column="order_detail" property="order_detail"/>
			<result column="material" property="material"/>
			<result column="packing" property="packing"/>
			<result column="main_price" property="main_price"/>
			<result column="main_quantity" property="main_quantity"/>
			<result column="secondary_price" property="secondary_price"/>
			<result column="secondary_quantity" property="secondary_quantity"/>
			<result column="remark" property="remark"/>
			<result column="residue" property="residue"/>
			<result column="in_storage" property="in_storage"/>
			<result column="main_residue" property="main_residue"/>
			<result column="main_in_storage" property="main_in_storage"/>
			<result column="name" property="name"/>
			<result column="conversion" property="conversion"/>
			<result column="unit" property="unit"/>
			<result column="unit_help" property="unit_help"/>
			<result column="spec" property="spec"/>
			<result column="budget_plan_detail" property="budget_plan_detail"/>
        </collection> 
	</resultMap>
	
	<!-- 分页模糊查询 -->
	<select id="selectByCondition" resultMap="storageHeadMap" parameterType="map">
		select * from (
		select sh.*,ROW_NUMBER() OVER (order by storage_no ) r 
		from  b_storage_head sh
		<where>
			<if test="storageHead.storage_no != null and storageHead.storage_no != ''">and sh.storage_no=#{storageHead.storage_no}</if>
			<if test="storageHead.state != null and storageHead.state != ''">and  sh.state= #{storageHead.state}</if>
			<if test="storageHead.entry_date_begin != null and storageHead.entry_date_begin != ''"> and sh.entry_date &gt;=to_date(#{storageHead.entry_date_begin},'yyyy-mm-dd')</if>
			<if test="storageHead.entry_date_end != null and storageHead.entry_date_end != ''"> and sh.entry_date &lt;=to_date(#{storageHead.entry_date_end},'yyyy-mm-dd') </if>
		</where>
		)s
		<if test="page!= null">
			where s.r
			between (#{page.totalCount}-#{page.pageNow}*#{page.pageSize}+1)
			and (#{page.totalCount}-(#{page.pageNow}-1)*#{page.pageSize})
		</if>
		order by storage_no desc 
	</select>
	
	<!-- 查询记录数 -->
	<select id="countParam" resultType="int" parameterType="map">
		select count(*) from b_storage_head sh
		<where>
			<if test="storageHead.storage_no != null and storageHead.storage_no != ''">and sh.storage_no=#{storageHead.storage_no}</if>
			<if test="storageHead.state != null and storageHead.state != ''">and  sh.state= #{storageHead.state}</if>
			<if test="storageHead.entry_date_begin != null and storageHead.entry_date_begin != ''"> and sh.entry_date &gt;=to_date(#{storageHead.entry_date_begin},'yyyy-mm-dd')</if>
			<if test="storageHead.entry_date_end != null and storageHead.entry_date_end != ''"> and sh.entry_date &lt;=to_date(#{storageHead.entry_date_end},'yyyy-mm-dd') </if>
		</where>
	</select>	
	
	<!-- 查看  -->
	<select id="view" parameterType="String" resultMap="storageHeadMap">
		select sh.id, sh.storage_no, sh.warehouse, sh.entry_date, sh.user_id, sh.order_frame, sh.state,sh.main_totalAmount,
		s.supplier_name, w.warehouse_name, oh.order_no, ui.realname user_name, fh.frame_no, pch.contract_no,
		sd.no, sd.storge_head, sd.material, sd.order_detail, sd.packing, sd.remark, sd.main_price, sd.main_quantity, sd.secondary_price, sd.secondary_quantity, sd.id sid
		,m.name, y.dic_name unit,yy.dic_name unit_help, m.conversion, m.spec,od.budget_plan_detail,od.already_secondary_quantity in_storage,(od.secondary_quantity-od.already_secondary_quantity) residue,
		od.already_main_quantity main_in_storage,(od.main_quantity-od.already_main_quantity) main_residue,
		oh.contract_id,oh.frame_id 
		from b_storage_head sh
		inner join b_storage_detail sd on sh.id=sd.storge_head
		inner join sys_user u on u.user_id=sh.user_id
		inner join sys_userinfo ui on ui.user_id=u.user_id
		left join base_warehouse w on w.warehouse_id=sh.warehouse
		inner join b_order_head oh on oh.id=sh.order_frame
    	inner join b_order_detail od on od.id=sd.order_detail
		inner join base_supplier s on s.id=oh.supplier_id
		left join b_purchase_contract_head pch on pch.id=oh.contract_id
		left join b_frame_head fh on fh.id=oh.frame_id
		inner join base_material m on  m.id = sd.material
		inner join sys_dictionary y on  m.unit = y.dic_code
		left join sys_dictionary yy on  m.unit_help = yy.dic_code
		<where>
			sh.id = #{id}
		</where>
			order by sd.no
	</select>
	
	<!-- 提交 -->
	<update id="submit" parameterType="String">
		update b_storage_head set state = '审批通过'
		where id=#{id} 
	</update>
	
	<!-- 更新主表(删除用) -->
	<update id="update" parameterType="StorageHead">
		update b_storage_head set
		warehouse = #{warehouse},
		entry_date = #{entry_date},
		order_frame = #{order_frame},
		secondary_totalAmount = #{main_totalAmount}
		where id = #{id}
	</update>
	
	<!-- 插入数据 -->
	<insert id="insert" parameterType="StorageHead">
		insert into b_storage_head
		(id,storage_no,warehouse,entry_date,user_id,order_frame,state,is_choice,main_totalAmount)
		values
		(#{id},#{storage_no},#{warehouse},#{entry_date},#{user_id},#{order_frame},#{state},#{is_choice},#{main_totalAmount})
	</insert>
	<!-- 倒叙查找入库编号  新建用来设置入库编号 -->
	<select id="selectStorage_no"  resultType="String">
	select sh.* from (select storage_no from b_storage_head order by storage_no desc) sh where rownum=1  
	</select>
	
	<!-- 更新单据是否已经选择 -->
	<update id="selectStorage_noAndIs_choice" parameterType="map">
		update b_storage_head set
		is_choice = #{is_choice}
		where storage_no in
		<foreach collection="Nos" index="index" item="Nos" open="("  separator="," close=")">
					#{Nos}
		</foreach>
	</update>
	<!-- 公共分页模糊查询 -->
	<select id="selectPublic" resultMap="storageHeadMap" parameterType="map">
		select * from (
		select sh.*,fh.frame_no,pch.contract_no,ROW_NUMBER() OVER (order by storage_no ) r 
		from  b_storage_head sh
		inner join b_order_head oh on oh.id=sh.order_frame
		left join b_purchase_contract_head pch on pch.id=oh.contract_id
		left join b_frame_head fh on fh.id=oh.frame_id
		<where>
		     sh.is_choice=0
			<if test="storageHead.storage_no != null and storageHead.storage_no != ''">and sh.storage_no=#{storageHead.storage_no}</if>
			<if test="storageHead.state != null and storageHead.state != ''">and  sh.state= #{storageHead.state}</if>
			<if test="storageHead.entry_date_begin != null and storageHead.entry_date_begin != ''"> and sh.entry_date &gt;=to_date(#{storageHead.entry_date_begin},'yyyy-mm-dd')</if>
			<if test="storageHead.entry_date_end != null and storageHead.entry_date_end != ''"> and sh.entry_date &lt;=to_date(#{storageHead.entry_date_end},'yyyy-mm-dd') </if>
			<if test="ids != null and ids.length>0">
			or sh.id in
				<foreach collection="ids" index="index" item="ids" open="("  separator="," close=")">
					#{ids}
				</foreach>
			</if>
		</where>
		)s
		<if test="page!= null">
			where s.r
			between (#{page.totalCount}-#{page.pageNow}*#{page.pageSize}+1)
			and (#{page.totalCount}-(#{page.pageNow}-1)*#{page.pageSize})
		</if>
		order by storage_no desc 
	</select>
	
	<!-- 公共查询记录数 -->
	<select id="countPublic" resultType="int" parameterType="map">
		select count(*) from b_storage_head sh
		<where>
		     sh.is_choice=0
			<if test="storageHead.storage_no != null and storageHead.storage_no != ''">and sh.storage_no=#{storageHead.storage_no}</if>
			<if test="storageHead.state != null and storageHead.state != ''">and  sh.state= #{storageHead.state}</if>
			<if test="storageHead.entry_date_begin != null and storageHead.entry_date_begin != ''"> and sh.entry_date &gt;=to_date(#{storageHead.entry_date_begin},'yyyy-mm-dd')</if>
			<if test="storageHead.entry_date_end != null and storageHead.entry_date_end != ''"> and sh.entry_date &lt;=to_date(#{storageHead.entry_date_end},'yyyy-mm-dd') </if>
			<if test="ids != null and ids.length>0">
			or sh.id in
				<foreach collection="ids" index="index" item="ids" open="("  separator="," close=")">
					#{ids}
				</foreach>
			</if>
		</where>
	</select>	
	
</mapper>